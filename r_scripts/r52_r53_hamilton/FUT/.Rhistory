a <- [1,2,3, 4]
a <- 1,2,3, 4
a <- c(1,2,3;4,5,6)
a <- c(1,2,3)
a <- (1,2,3)
a <- (1;2;3)
a <- c(c(1, 2), c(3,4))
a
a <- (c(1, 2), c(3,4))
read.csv("test_csv.csv")
read.csv("C:\Users\USLP095001\code\rstudio")
read.csv("C:\\Users\\USLP095001\\code\\rstudio\\test_csv.csv")
test_csv <- read.csv("C:\\Users\\USLP095001\\code\\rstudio\\test_csv.csv")
View(test_csv)
View(test_csv)
test_csv <- read.csv("C:\\Users\\USLP095001\\code\\rstudio\\test_csv.csv", sep=",")
View(test_csv)
View(test_csv)
print(17)
x = 10
y <- 11
help
"help"
plot(1:10)
plot(1:10, 1:10:2)
plot(1:10, 1:2:10)
1:20:2
1:2:20
demo()
read.csv("test_csv.csv")
read.csv("C:\\Users\\USLP095001\\code\\rstudio\\test_csv.csv")
read.csv("C:\\Users\\USLP095001\\code\\rstudio\\test_csv.csv")
a <- read.csv("C:\\Users\\USLP095001\\code\\rstudio\\test_csv.csv")
View(a)
plot(a.Cool, a.Name)
plot(a[["Cool"]], a[["Name"]]
)
plot(a[["Cool"]], a[["Person"]]
)
plot(a[1], a[2])
a[1]
a[2]
a$Cool
plot(a$Cool, a$Name)
plot(a$Cool, a$Name)
plot.function(a$Cool, a$Name)
f <- function(x){}
print(2)
f(10)
f <- function(x){}
f <- function(x){
y = x + 10
x + y
}
f
f(x)
f(5)
set.seed(1)
x <- rnorm(100, 15, 2)
y <- 2.5 * x + rnorm(100, 0, 1.5)
lm(x~ y)
plot(x, y)
model = lm(x ~ y)
abline(model)
plot(x, y)
abline(model)
model = lm(y ~ x)
model
abline(model)
plot(a)
lm(Cool ~ Name + Person)
lm(Cool ~ Name + Person, a)
abline(Cool)
print("{hello")
print("cool Person")
install.packages("languageserver")
print("Cool Person")
lm(c(1,2,3) ~ c(2,3,4))
mainDir <- "C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/r52_r53_hamilton"
tab <- c("4.02", "4.03", "8.01", "10.03", "10.04", "706.03", "769.03", "958.03", "1021.03")
## Source R function
source("C:\Users\USLP095001\WSP O365\Fussell, Rhett - stops example R script\STOPS.R")
## Source R function
source("C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/STOPS.R")
## Extract tables
gettable(mainDir,tab)
# Step 2. Combine all CSV into one XLSX
## Create output spreadsheet
setwd(mainDir)
output <- paste(mainDir, "/Summary.xlsx", sep = "")
wb <- loadWorkbook(output, create=TRUE)
fname = list.files(pattern = ".prn")
## Read current/future scenario CSV
for(fn in fname){
setwd(mainDir)
scenario <- gsub(".prn","", fn)
dir <- paste(mainDir, scenario, sep = "/")
setwd(dir)
CSVname <- list.files(pattern = ".csv")
tabname <- lapply(CSVname, function(x) paste(scenario, x))
tabname <- lapply(tabname, function(x) gsub(".csv", "",x))
names(CSVname) <- tabname
## Write CSV to workbook
for (nm in tabname) {
## ingest the CSV file
temp_DT <- fread(CSVname[[nm]])
## Create the sheet where the file will be outputed to
createSheet(wb, name=nm)
## output the csv contents
writeWorksheet(object=wb, data=temp_DT, sheet=nm, header=TRUE, rownames=NULL)
}
## If you see warning message saying JAVA running out of space, that's because R studio can only use space allocated to the software.
## Solution is to clean the environment and close R studio. Re-run step 2 only.
saveWorkbook(wb)
}
clear
mainDir <- "C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/r52_r53_hamilton"
tab <- c("4.02", "4.03", "8.01", "10.03", "10.04", "706.03", "769.03", "958.03", "1021.03")
## Source R function
source("C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/STOPS.R")
## Extract tables
gettable(mainDir,tab)
# Step 2. Combine all CSV into one XLSX
## Create output spreadsheet
setwd(mainDir)
output <- paste(mainDir, "/Summary.xlsx", sep = "")
wb <- loadWorkbook(output, create=TRUE)
fname = list.files(pattern = ".prn")
## Read current/future scenario CSV
for(fn in fname){
setwd(mainDir)
scenario <- gsub(".prn","", fn)
dir <- paste(mainDir, scenario, sep = "/")
setwd(dir)
CSVname <- list.files(pattern = ".csv")
tabname <- lapply(CSVname, function(x) paste(scenario, x))
tabname <- lapply(tabname, function(x) gsub(".csv", "",x))
names(CSVname) <- tabname
## Write CSV to workbook
for (nm in tabname) {
## ingest the CSV file
temp_DT <- fread(CSVname[[nm]])
## Create the sheet where the file will be outputed to
createSheet(wb, name=nm)
## output the csv contents
writeWorksheet(object=wb, data=temp_DT, sheet=nm, header=TRUE, rownames=NULL)
}
## If you see warning message saying JAVA running out of space, that's because R studio can only use space allocated to the software.
## Solution is to clean the environment and close R studio. Re-run step 2 only.
saveWorkbook(wb)
}
output
fname
mainDir <- "C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/r52_r53_hamilton"
tab <- c("4.02", "4.03", "8.01", "10.03", "10.04", "706.03", "769.03", "958.03", "1021.03")
mainDir <- "C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/r52_r53_hamilton"
tab <- c("4.02", "4.03", "8.01", "10.03", "10.04", "706.03", "769.03", "958.03", "1021.03")
## Source R function
source("C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/STOPS.R")
## Extract tables
gettable(mainDir,tab)
# Step 2. Combine all CSV into one XLSX
## Create output spreadsheet
setwd(mainDir)
output <- paste(mainDir, "/Summary.xlsx", sep = "")
wb <- loadWorkbook(output, create=TRUE)
fname = list.files(pattern = ".prn")
## Read current/future scenario CSV
for(fn in fname){
setwd(mainDir)
scenario <- gsub(".prn","", fn)
dir <- paste(mainDir, scenario, sep = "/")
setwd(dir)
CSVname <- list.files(pattern = ".csv")
tabname <- lapply(CSVname, function(x) paste(scenario, x))
tabname <- lapply(tabname, function(x) gsub(".csv", "",x))
names(CSVname) <- tabname
## Write CSV to workbook
for (nm in tabname) {
## ingest the CSV file
temp_DT <- fread(CSVname[[nm]])
## Create the sheet where the file will be outputed to
createSheet(wb, name=nm)
## output the csv contents
writeWorksheet(object=wb, data=temp_DT, sheet=nm, header=TRUE, rownames=NULL)
}
## If you see warning message saying JAVA running out of space, that's because R studio can only use space allocated to the software.
## Solution is to clean the environment and close R studio. Re-run step 2 only.
saveWorkbook(wb)
}
wb
temp_DT
wb
mainDir <- "C:/Users/USLP095001/code/pytstops/pySTOPS/r_scripts/r52_r53_hamilton"
tab <- c("4.02", "4.03", "8.01", "10.03", "10.04", "706.03", "769.03", "958.03", "1021.03")
## Source R function
source("C:/Users/USLP095001/WSP O365/Fussell, Rhett - stops example R script/STOPS.R")
## Extract tables
gettable(mainDir,tab)
# Step 2. Combine all CSV into one XLSX
## Create output spreadsheet
setwd(mainDir)
output <- paste(mainDir, "/Summary.xlsx", sep = "")
wb <- loadWorkbook(output, create=TRUE)
fname = list.files(pattern = ".prn")
## Read current/future scenario CSV
for(fn in fname){
setwd(mainDir)
scenario <- gsub(".prn","", fn)
dir <- paste(mainDir, scenario, sep = "/")
setwd(dir)
CSVname <- list.files(pattern = ".csv")
tabname <- lapply(CSVname, function(x) paste(scenario, x))
tabname <- lapply(tabname, function(x) gsub(".csv", "",x))
names(CSVname) <- tabname
## Write CSV to workbook
for (nm in tabname) {
## ingest the CSV file
temp_DT <- fread(CSVname[[nm]])
## Create the sheet where the file will be outputed to
createSheet(wb, name=nm)
## output the csv contents
writeWorksheet(object=wb, data=temp_DT, sheet=nm, header=TRUE, rownames=NULL)
}
## If you see warning message saying JAVA running out of space, that's because R studio can only use space allocated to the software.
## Solution is to clean the environment and close R studio. Re-run step 2 only.
saveWorkbook(wb)
}
Year <- c("CUR/","FUT/")
Scenario <- c(rep(c("HBW",
"All Other Purposes",
"Special Market 1",
"Special Market 1",
"Special Market 1",
"Special Market 1"
), each = 2), "New Transit Trips",
"Linked Transit TOP", " ", "PMT Difference", "VMT Difference")
rep <- (length(Scenario)-5)/2
Transit_Type <- c(rep(c("Non-Transit Dependents", "Transit Dependents"),times= rep), rep(c("-"),times= 5))
Summary_Table <- data.frame("Scenario" = Scenario,"Transit Type" = Transit_Type)
for (s in Year)
{
mainDir <- paste("C:/projects/30901990A_sorta/fta_temp/r56_r57_2019_reading/",s, sep="")
setwd(mainDir)
table_nos <- c("10.03", "10.04", "1021.03", "4.02", "4.03", "706.03", "769.03", "8.01", "958.03")
table <- list()
rows <- list()
cols <- list()
last_value <- list()
for (i in 1:length(table_nos))
{
name <- paste("Table ", table_nos[i], ".csv", sep = "")
t <- read.csv(name)
r <- nrow(t)
c <- ncol(t)
for (k in 1:r)
{
if(t[k,1] == "Total")
{
last_row <- k
}
}
m = t[last_row, c]
table <- c(table, t)
rows <- c(rows, r)
cols <- c(cols, c)
last_value <- c(last_value, as.integer(m))
}
names(last_value) <- table_nos
HBW_NTD = last_value$`769.03`-last_value$`706.03`
HBW_TD = last_value$`706.03`
AOP_TD =last_value$`958.03`- HBW_TD
AOP_NTD = last_value$`1021.03`- HBW_TD - HBW_NTD - AOP_TD
SM1_NTD = 0
SM1_TD = 0
SM2_NTD = 0
SM2_TD = 0
SM3_NTD = 0
SM3_TD = 0
SM4_NTD = 0
SM4_TD = 0
NTT= last_value$`4.02`
LTTOP = last_value$`4.03`
PMT_Diff = last_value$`8.01`
VMT_Diff = last_value$`8.01`/1.1
values <- c(HBW_NTD,HBW_TD, AOP_NTD, AOP_TD,SM1_NTD,SM1_TD,SM2_NTD, SM2_TD, SM3_NTD,SM3_TD,SM4_NTD, SM4_TD, NTT,LTTOP,0, PMT_Diff, VMT_Diff)
# Vehicle Assignment
Peak <- read.csv("Table 10.03.csv")
Off_Peak <- read.csv("Table 10.04.csv")
r <- nrow(Peak)
c <- ncol(Peak)
for (k in 1:r)
{
if(Peak[k,1] == "Route_ID")
{start_line <- k+1}
else if(Peak[k,1] == "Total")
{end_line <-k}
}
g <- Peak[c(start_line : end_line), 1]
VehAsg <- data.frame("Route_ID" = Peak[c(start_line : end_line), 1],
"Route Name" = Peak[c(start_line : end_line), 2],
"No_Build_PEAK" = Peak[c(start_line : end_line), 7],
"No_Build_OFF PEAK" = Off_Peak[c(start_line : end_line), 7],
"Build_PEAK" = Peak[c(start_line : end_line), 10],
"Build_OFF PEAK" = Off_Peak[c(start_line : end_line), 10])
#Create Data frames
if(s == "CUR/")
{ Summary_Table <- data.frame(Summary_Table, "Current" = values)
mainDir <- "C:/projects/30901990A_sorta/fta_temp/r56_r57_2019_reading/"
setwd(mainDir)
write.csv(VehAsg, "Vehicle Assignment (CUR).csv", na = "", row.names = FALSE, col.names = FALSE)
}
else if(s == "FUT/")
{Summary_Table <- data.frame(Summary_Table, "Future" = values)
mainDir <- "C:/projects/30901990A_sorta/fta_temp/r56_r57_2019_reading/"
setwd(mainDir)
write.csv(VehAsg, "Vehicle Assignment (FUT).csv", na = "", row.names = FALSE, col.names = FALSE)
}
}
Parsons
setwd(mainDir)
mainDir
paste(1,'two',3,'four',5,'six')
paste(c(1,3,3))
install.packages("yaml")
library(yaml)
yaml.load_file("input_prn_path")
yaml.load_file("config.yml")
foo = yaml.load_file("config.yml")
getwd()
foo = yaml.load_file(paste(cwd, "config.yml"))
cwd <- getwd()
foo = yaml.load_file(paste(cwd, "/config.yml"))
csd
cwd
cwd <- getwd()
cwd
install.packages("yaml")
library(yaml)
cwd <- getwd()
cwd
